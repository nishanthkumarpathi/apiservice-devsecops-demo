name: Deploying Springboot(War) to Tomcat on Azure Windows Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-springboot-app:
    name: Building
    runs-on: ubuntu-latest
    steps:
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Verify Java Version
        run: java -version

      - name: Download the Code
        uses: actions/checkout@v3

      - name: Fix the Permissions of mvnw command
        run: chmod +x mvnw

      - name: replace the REPALCETHISVALUEINGITHUBACTIONS in pom.xml with Build Number
        run: sed -i "s/REPALCETHISVALUEINGITHUBACTIONS/${{github.run_number}}/g" pom.xml

      - name: Build the Code
        run: ./mvnw package

      - name: Verify the Build is Created or Not
        run: ls -l target/*.war
      
      - name: Upload Action Artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: apiservice-${{github.run_number}}.war
          path: target/apiservice-${{github.run_number}}.war

      - name: Display structure of uploaded files
        run: ls -R
      # - name: Rename the File Name with GITHUB_RUN_NUMBER
      #   run: mv target/apiservice-0.0.1-SNAPSHOT.war target/apiservice-${{github.run_number}}.war

  deployment-springboot-app:
    name: Deploying the App
    runs-on: ubuntu-latest
    needs: build-springboot-app
    steps:

      - name: Download the Code
        uses: actions/download-artifact@v3
        with:
          name: apiservice-${{github.run_number}}.war

      - name: Display structure of downloaded files
        run: ls -R

      - name: Deploy the Build to Tomcat
        uses: mdallasanta/ssh-scp-deploy@v1.2.0
        with:
          local: 'apiservice-${{github.run_number}}.war'                                                 
          remote: 'C:\Program Files\Apache Software Foundation\Tomcat 10.0\webapps\'                                               
          host: ${{secrets.HOST}}                                  
          user: ${{secrets.USER}}
          password: ${{secrets.PASSWORD}}
          pre_upload: echo "This will be executed before the upload!"
          post_upload: echo "This will be executed after the upload!"
          ssh_options: -o StrictHostKeyChecking=no
          scp_options: -v

  verify-springboot-app:
    name: Verifying the App
    runs-on: ubuntu-latest
    needs: deployment-springboot-app
    steps:
      - name: Verify the App
        run: curl -I http://${{secrets.HOST}}:8080/apiservice-${{github.run_number}}/actuator/health
